{"version":3,"sources":["../../src/middleware/prepareQuery.js"],"names":["_","require","isCoordinates","module","exports","options","errorHandler","jsonQueryParser","key","value","allowRegex","undefined","isString","RegExp","substr","$gte","$gt","$lte","$lt","$ne","isArray","$in","parseQueryOptions","queryOptions","select","split","i","length","substring","populate","push","path","indexOf","Object","keys","req","res","next","whitelist","_ermQueryOptions","query","JSON","parse","e","Error","parseInt"],"mappings":"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","file":"prepareQuery.js","sourcesContent":["const _ = require('lodash')\r\nconst isCoordinates = require('is-coordinates')\r\n\r\nmodule.exports = function (options) {\r\n  const errorHandler = require('../errorHandler')(options)\r\n\r\n  function jsonQueryParser (key, value) {\r\n    if (key === '$regex' && !options.allowRegex) {\r\n      return undefined\r\n    }\r\n\r\n    if (_.isString(value)) {\r\n      if (value[0] === '~') { // parse RegExp\r\n        return options.allowRegex ? new RegExp(value.substr(1), 'i') : undefined\r\n      } else if (value[0] === '>') {\r\n        if (value[1] === '=') {\r\n          return { $gte: value.substr(2) }\r\n        } else {\r\n          return { $gt: value.substr(1) }\r\n        }\r\n      } else if (value[0] === '<') {\r\n        if (value[1] === '=') {\r\n          return { $lte: value.substr(2) }\r\n        } else {\r\n          return { $lt: value.substr(1) }\r\n        }\r\n      } else if (value[0] === '!' && value[1] === '=') {\r\n        return { $ne: value.substr(2) }\r\n      /* This feature was disabled because it requires MongoDB 3\r\n      } else if (value[0] === '=') {\r\n        return { $eq: value.substr(1) } */\r\n      }\r\n    } else if (_.isArray(value) && key[0] !== '$' && key !== 'coordinates' && !isCoordinates(value)) {\r\n      return { $in: value }\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n  function parseQueryOptions (queryOptions) {\r\n    if (queryOptions.select && _.isString(queryOptions.select)) {\r\n      let select = queryOptions.select.split(',')\r\n      queryOptions.select = {}\r\n\r\n      for (let i = 0, length = select.length; i < length; i++) {\r\n        if (select[i][0] === '-') {\r\n          queryOptions.select[select[i].substring(1)] = 0\r\n        } else {\r\n          queryOptions.select[select[i]] = 1\r\n        }\r\n      }\r\n    }\r\n\r\n    if (queryOptions.populate) {\r\n      if (_.isString(queryOptions.populate)) {\r\n        let populate = queryOptions.populate.split(',')\r\n        queryOptions.populate = []\r\n\r\n        for (let i = 0, length = populate.length; i < length; i++) {\r\n          queryOptions.populate.push({\r\n            path: populate[i]\r\n          })\r\n\r\n          for (let key in queryOptions.select) {\r\n            if (key.indexOf(populate[i] + '.') === 0) {\r\n              if (queryOptions.populate[i].select) {\r\n                queryOptions.populate[i].select += ' '\r\n              } else {\r\n                queryOptions.populate[i].select = ''\r\n              }\r\n\r\n              if (queryOptions.select[key] === 0) {\r\n                queryOptions.populate[i].select += '-'\r\n              }\r\n\r\n              queryOptions.populate[i].select += key.substring(populate[i].length + 1)\r\n              delete queryOptions.select[key]\r\n            }\r\n          }\r\n\r\n          // If other specific fields are selected, add the populated field\r\n          if (queryOptions.select) {\r\n            if (Object.keys(queryOptions.select).length > 0 && !queryOptions.select[populate[i]]) {\r\n              queryOptions.select[populate[i]] = 1\r\n            } else if (Object.keys(queryOptions.select).length === 0) {\r\n              delete queryOptions.select\r\n            }\r\n          }\r\n        }\r\n      } else if (!_.isArray(queryOptions.populate)) {\r\n        queryOptions.populate = [queryOptions.populate]\r\n      }\r\n    }\r\n\r\n    return queryOptions\r\n  }\r\n\r\n  return function (req, res, next) {\r\n    const whitelist = ['distinct', 'limit', 'populate', 'query', 'select', 'skip', 'sort']\r\n\r\n    req._ermQueryOptions = {}\r\n\r\n    for (let key in req.query) {\r\n      if (whitelist.indexOf(key) === -1) {\r\n        continue\r\n      }\r\n\r\n      if (key === 'query') {\r\n        try {\r\n          req._ermQueryOptions[key] = JSON.parse(req.query[key], jsonQueryParser)\r\n        } catch (e) {\r\n          return errorHandler(req, res, next)(new Error(`invalid_json_${key}`))\r\n        }\r\n      } else if (key === 'populate' || key === 'select' || key === 'sort') {\r\n        try {\r\n          req._ermQueryOptions[key] = JSON.parse(req.query[key])\r\n        } catch (e) {\r\n          req._ermQueryOptions[key] = req.query[key]\r\n        }\r\n      } else if (key === 'limit' || key === 'skip') {\r\n        req._ermQueryOptions[key] = parseInt(req.query[key], 10)\r\n      } else {\r\n        req._ermQueryOptions[key] = req.query[key]\r\n      }\r\n    }\r\n\r\n    req._ermQueryOptions = parseQueryOptions(req._ermQueryOptions)\r\n\r\n    next()\r\n  }\r\n}\r\n"]}